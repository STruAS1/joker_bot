package start

import (
	"SHUTKANULbot/Utilities"
	"SHUTKANULbot/bot/context"
	"fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type Doc struct {
	Text      string
	PhotoName string
}

var Docs []Doc = []Doc{
	{"<b>JokerBot</b> ‚Äî —ç—Ç–æ <b>Telegram-–±–æ—Ç</b>, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ—Ä–µ–≤–Ω—É—é—Ç—Å—è –≤ —é–º–æ—Ä–µ, –ø—É–±–ª–∏–∫—É—é—Ç —à—É—Ç–∫–∏, –ø–æ–ª—É—á–∞—é—Ç –æ—Ü–µ–Ω–∫–∏ –∏ <i>–∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —Ç–æ–∫–µ–Ω—ã!</i> üé≠üí∞üéÅ", "firstImage.jpg"},
	{("<b>üé≠ –ü—É–±–ª–∏–∫—É–π —à—É—Ç–∫–∏ ‚Äî –ø–æ–ª—É—á–∞–π –æ—Ü–µ–Ω–∫–∏!</b>" +
		"\n<blockquote><i>–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —É —Ç–µ–±—è –µ—Å—Ç—å 2 –ø–æ–ø—ã—Ç–∫–∏, —á—Ç–æ–±—ã —Ä–∞—Å—Å–º–µ—à–∏—Ç—å –¥—Ä—É–≥–∏—Ö! –õ—É—á—à–∏–µ —à—É—Ç–∫–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Ç–æ–ø!</i></blockquote>" +
		"\n\n<b>üèÜ –ü–æ–ø–∞–¥–∏ –≤ —Ç–æ–ø –∏ –ø—Ä–æ–¥–≤–∏–≥–∞–π —Å–µ–±—è!</b>" +
		"\n<blockquote><i>- –®—É—Ç–∫–∞ —Å —Å–∞–º—ã–º –≤—ã—Å–æ–∫–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º –¥–Ω—è –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –∫–∞–Ω–∞–ª–µ." +
		"\n- –í —Ç–≤–æ–µ–π —à—É—Ç–∫–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–æ–π Telegram-–∫–∞–Ω–∞–ª –∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç. –≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–∞–±—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏ –ø—Ä–∏–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —Ç–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª—è–º!</i></blockquote>" +
		"\n\n<b>üí¨ –î–æ–±–∞–≤–ª—è–π –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—ã</b>" +
		"\n<blockquote><i>- –¢—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—ã, –∏ –æ–Ω –±—É–¥–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.</i></blockquote>"),
		"SecondImage.jpg"},
	{"\n\n<b>ü™ô–î–∞–≤–∞–π –ø–æ —Ñ–∞–∫—Ç–∞–º:</b>" +
		"\n<i><blockquote>- –¢—ã –ø–∏—à–µ—à—å —à—É—Ç–∫–∏, –∏—Ö –æ—Ü–µ–Ω–∏–≤–∞—é—Ç ‚Äî –∏ —á—Ç–æ? –ü–æ–ª—É—á–∞–µ—à—å —Ç–æ–∫–µ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏—Ö—Ä–µ–Ω–∞ –Ω–µ —Å—Ç–æ—è—Ç. üí∏" +
		"\n- –ü—Ä–∏–≥–ª–∞—Å–∏–ª –¥—Ä—É–≥–∞? –î–∞, —Ç–µ–±–µ –∫–∞–ø–Ω–µ—Ç 1% —Å –µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤, –Ω–æ —Å–º—ã—Å–ª, –µ—Å–ª–∏ —ç—Ç–æ –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–µ —Ü–∏—Ñ—Ä—ã? ü´†" +
		"\n- –û—Ü–µ–Ω–∏–≤–∞–µ—à—å —à—É—Ç–∫–∏, —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö ‚Äî –∏ –≤—Å—ë —Ä–∞–¥–∏ —á–µ–≥–æ? –†–∞–¥–∏ –≤–æ–∑–¥—É—Ö–∞. üí®</blockquote></i>" +
		"\n\n<b>üÉè –û–≥–æ, –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å NFT!</b>" +
		"\n<i><blockquote>- –î–∞ –∫–æ–º—É –Ω–∞—Ö—Ä–µ–Ω –Ω—É–∂–Ω—ã —Ç–≤–æ–∏ NFT-—à—É—Ç–∫–∏? üòÇ –ö—É–¥–∞ —Ç—ã –∏—Ö –¥–µ–Ω–µ—à—å? –ö—Ç–æ –∏—Ö –∫—É–ø–∏—Ç? –ù–∏–∫—Ç–æ.</blockquote></i>" +
		"\n\n<b>üí∞ –ù–æ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω—ã!</b>" +
		"\n<i><blockquote>- –ê–≥–∞, –≤—ã–≤–æ–¥–∏. –¢–æ–ª—å–∫–æ –∫—É—Ä—Å ‚Äì –≥–æ–≤–Ω–æ, –∫–æ–º–∏—Å—Å–∏–∏ —Å–æ–∂—Ä—É—Ç –ø–æ–ª–æ–≤–∏–Ω—É, –∞ —Å–ø—Ä–æ—Å–∞ –Ω–µ—Ç. –í –∏—Ç–æ–≥–µ –Ω–∏ –¥–µ–Ω–µ–≥, –Ω–∏ –≤—Ä–µ–º–µ–Ω–∏, –Ω–∏ —Å–º—ã—Å–ª–∞. ü§°</blockquote></i>", "LastImage.jpg"},
}

func HandleDocs(botCtx *context.BotContext) {
	state := context.GetUserState(botCtx)
	context.UpdateUserLevel(botCtx, 1)
	ActiveStep, exist := state.Data["DocsActiveStep"].(int)
	if !exist {
		ActiveStep = 0
	}
	var rows [][]tgbotapi.InlineKeyboardButton
	var callback string
	var button string
	if len(Docs) == ActiveStep+1 {
		callback = "StartMenu"
		button = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
		delete(state.Data, "DocsActiveStep")
	} else {
		callback = "Docs"
		button = "–î–∞–ª—å—à–µ"
		state.Data["DocsActiveStep"] = ActiveStep + 1
	}
	rows = append(rows, tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData(button, callback)))
	Doc := Docs[ActiveStep]
	if state.MessageID != 0 {
		DeleteMessageConfig := tgbotapi.DeleteMessageConfig{
			ChatID:    botCtx.UserID,
			MessageID: state.MessageID,
		}
		botCtx.Ctx.BotAPI.Send(DeleteMessageConfig)
	}
	msg := tgbotapi.NewPhoto(botCtx.UserID, tgbotapi.FileID(Utilities.GetPhotoId(botCtx, Doc.PhotoName)))
	msg.Caption = Doc.Text
	msg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(rows...)
	msg.ParseMode = "HTML"
	photoMSG, err := botCtx.Ctx.BotAPI.Send(msg)
	if err != nil {
		fmt.Print(err)
	}
	state.MessageID = photoMSG.MessageID
}
