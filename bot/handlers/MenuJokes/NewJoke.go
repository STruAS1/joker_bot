package MenuJokes

import (
	"SHUTKANULbot/Utilities"
	"SHUTKANULbot/bot/context"
	"SHUTKANULbot/bot/handlers/start"
	"SHUTKANULbot/db"
	"SHUTKANULbot/db/models"
	"log"
	"math/rand"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func init() {
	rand.Seed(time.Now().UnixNano())
}

type NewJoke struct {
	Text       string
	ActiveStep uint
}

func NewJokeHandle(botCtx *context.BotContext) {
	state := context.GetUserState(botCtx)
	context.UpdateUserLevel(botCtx, 1)

	var Text string
	if botCtx.Message != nil {
		Text = botCtx.Message.Text
	}

	Joke, exist := state.Data["NewJoke"].(NewJoke)
	if !exist {
		Joke = NewJoke{}
	}

	switch Joke.ActiveStep {
	case 0:
		if botCtx.CallbackQuery != nil && botCtx.CallbackQuery.Data == "NewJoke" {
			if len(jokeRequests) == 0 {
				log.Println("–û—à–∏–±–∫–∞: jokeRequests –ø—É—Å—Ç")
				return
			}
			randomIndex := rand.Intn(len(jokeRequests))
			msgText := jokeRequests[randomIndex]

			Joke.ActiveStep++
			var rows [][]tgbotapi.InlineKeyboardButton
			rows = append(rows, tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("–û—Ç–º–µ–Ω–∞", "back")))

			if state.MessageID != 0 {
				msg := tgbotapi.NewEditMessageTextAndMarkup(botCtx.UserID, state.MessageID, msgText, tgbotapi.NewInlineKeyboardMarkup(rows...))
				msg.ParseMode = "HTML"
				botCtx.Ctx.BotAPI.Send(msg)
			} else {
				msg := tgbotapi.NewMessage(botCtx.UserID, msgText)
				msg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(rows...)
				msg.ParseMode = "HTML"
				botCtx.SendMessage(msg)
			}
		}
	case 1:
		if botCtx.Message != nil {
			formatetText := Utilities.ApplyFormatting(Text, botCtx.Message.Entities)
			Joke.Text = formatetText

			var rows [][]tgbotapi.InlineKeyboardButton
			rows = append(rows, tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", "Save")))
			rows = append(rows, tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("–û—Ç–º–µ–Ω–∞", "back")))

			msg := tgbotapi.NewMessage(botCtx.UserID, formatetText)
			msg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(rows...)
			msg.ParseMode = "HTML"
			botCtx.SendMessage(msg)

			Joke.ActiveStep++
		}
	case 2:
		if botCtx.CallbackQuery != nil && botCtx.CallbackQuery.Data == "Save" {
			var user models.User
			result := db.DB.Where("telegram_id = ?", botCtx.UserID).First(&user)
			if result.Error != nil {
				log.Printf("–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %d –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ", botCtx.UserID)
				return
			}

			NewJoke_db := models.Jokes{
				UserID:         user.ID,
				Text:           Joke.Text,
				Evaluations:    0,
				AVGScore:       0,
				AuthorUserName: user.AuthorUserName,
				AnonymsMode:    user.AnonymsMode,
			}
			db.DB.Create(&NewJoke_db)
			delete(state.Data, "NewJoke")
			start.HandleStartCommand(botCtx)
			return
		}
	}
	state.Data["NewJoke"] = Joke
}

var jokeRequests = [50]string{
	"<b>üé§ –î–∞–≤–∞–π, –Ω–µ –≤—ã—ë–±—ã–≤–∞–π—Å—è ‚Äî —à—É—Ç–∏!</b>",
	"<b>üî• –í—ä–µ–±–∏ —à—É—Ç–∫—É!</b> –ò–ª–∏ <span class=\"tg-spoiler\">—è–∑—ã–∫ –≤ –∂–æ–ø–µ?</span>",
	"<i>üòÇ –ì–¥–µ —à—É—Ç–∫–∞,</i> <span class=\"tg-spoiler\">–±–ª—è–¥–∏–Ω–∞?</span> –ù–µ —Ç—è–Ω–∏ <span class=\"tg-spoiler\">—Ö—É–π!</span>",
	"<b>ü§° –°–º–µ—à–∏, –∏–ª–∏ –≤ <span class=\"tg-spoiler\">—Ö—É–π</span> –¥—É—Ç—å –±—É–¥–µ—à—å?</b>",
	"<b>ü§® –í –∞—Ö—É–µ...</b> –¢—ã –≤–æ–æ–±—â–µ —à—É—Ç–∏—Ç—å —É–º–µ–µ—à—å?",
	"<i>‚ö° –®—É—Ç–∫—É –¥–∞–≤–∞–π!</i> –ê —Ç–æ <span class=\"tg-spoiler\">–≤—ä–µ–±–∞—Ç—å—Å—è –º–æ–∂–Ω–æ.</span>",
	"<b>üé≠ –ù—É –∏ –≥–¥–µ —Ç–≤–æ–π</b> <span class=\"tg-spoiler\">–±–ª—è–¥—Å–∫–∏–π —é–º–æ—Ä?</span>",
	"<b>üöÄ –í <span class=\"tg-spoiler\">–ø–∏–∑–¥—É</span> –º–æ–ª—á–∞–Ω–∏–µ!</b> –®—É—Ç–∏, –ø–æ–∫–∞ –º–æ–∂–µ—à—å.",
	"<b>üé™ <span class=\"tg-spoiler\">–í—ã–µ–±–∏</span> –Ω–∞—Ä–æ–¥ —Å–≤–æ–∏–º —é–º–æ—Ä–æ–º!</b>",
	"<b>üï∞Ô∏è –ë–µ–∑ <span class=\"tg-spoiler\">–ø–∏–∑–¥—ã</span>, –∂–¥—É —à—É—Ç–∫—É.</b>",
	"<b>üò∂ <span class=\"tg-spoiler\">–•—É–ª–∏</span> —Ç—ã –≤ —Ä–æ—Ç –Ω–∞–±—Ä–∞–ª?</b> –®—É—Ç–∏!",
	"<i>üëÄ –í <span class=\"tg-spoiler\">—Ö—É–π</span> –Ω–µ —Å—Ç–∞–≤–ª—é, –ø–æ–∫–∞ –Ω–µ —à—É—Ç–∏—à—å.</i>",
	"<b>üß† –¢—ã —Ç—É–ø–æ–π –∏–ª–∏ —à—É—Ç–∏—à—å –ø–ª–æ—Ö–æ?</b>",
	"<b>üçÜ –í —Ä–æ—Ç —Ç–µ–±–µ <span class=\"tg-spoiler\">—Ö—É–π</span>, –µ—Å–ª–∏ –Ω–µ —à—É—Ç–∏—à—å!</b>",
	"<i>üéôÔ∏è <span class=\"tg-spoiler\">–ë–æ—Å—ã–π —Ö—É–π</span> —É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞...</i> –®—É—Ç–∏!",
	"<b>üßê <span class=\"tg-spoiler\">–ê—Ö—É–ª–∏–∞—Ä–¥</span> —Å–ª–æ–≤, –Ω–æ —à—É—Ç–∫–∏ –Ω–µ—Ç?</b>",
	"<b>ü§î –î–∞–≤–∞–π, —Ä–∞—Å—Å–º–µ—à–∏ –Ω–∞—Ä–æ–¥, –Ω–µ –ø–æ–∑–æ—Ä—å—Å—è!</b>",
	"<i>ü•∂ –¢—ã –∫–∞–∫ <span class=\"tg-spoiler\">—Ö—É–π</span> –±–µ–∑ –ø—Ä–∏—á–∏–Ω–¥–∞–ª–∞.</i> –®—É—Ç–∏!",
	"<b>‚ö†Ô∏è –ï—Å–ª–∏ –Ω–µ —à—É—Ç–∏—à—å ‚Äî —Ç—ã <span class=\"tg-spoiler\">–µ–±–∞–Ω–∞—Ç!</span></b>",
	"<b>üì¢ <span class=\"tg-spoiler\">–ë–ª—è–¥—å</span>, –≥–¥–µ —Ç–≤–æ–π —é–º–æ—Ä?</b> –ò–ª–∏ —Ç—ã –ø—Ä–æ—Å—Ç–æ <span class=\"tg-spoiler\">–¥–æ–ª–±–æ—ë–±?</span>",
	"<b>üõë <span class=\"tg-spoiler\">–ê—Ä—Ö–∏–ø–∏–∑–¥—Ä–∏—Ç!</span> –®—É—Ç–∏, –∏–ª–∏ <span class=\"tg-spoiler\">–Ω–∞—Ö—É–π</span> –∏–¥–∏.</b>",
	"<b>üé¨ –°–º–µ—à–∏, –∏–ª–∏ –≤ <span class=\"tg-spoiler\">—Ö—É–π</span> –¥—É—Ç—å –±—É–¥–µ—à—å?</b>",
	"<i>ü•∂ –¢—ã —Ç—É—Ç —á—ë, <span class=\"tg-spoiler\">–ø–∏–∑–¥—É</span> –º–æ—Ä–æ–∑–∏—à—å?</i> –®—É—Ç–∏!",
	"<b>üß® –ì–¥–µ —à—É—Ç–∫–∞,</b> <span class=\"tg-spoiler\">—Ö—É–µ—Å–æ—Å?</span> –ò–ª–∏ –≤ <span class=\"tg-spoiler\">–µ–±–ª–æ</span> –¥–∞—Ç—å?",
	"<b>ü•¥ –ù—É —Ç—ã –∏ <span class=\"tg-spoiler\">–±–ª—è–¥—É–Ω...</span></b> –®—É—Ç–∏ –¥–∞–≤–∞–π!",
	"<b>üò° <span class=\"tg-spoiler\">–ë–ª—è–¥—Å—Ç–≤–æ –µ–±–∞–Ω–æ–µ!</span></b> –®—É—Ç–∏ –±—ã—Å—Ç—Ä–µ–µ!",
	"<i>ü•∂ –í <span class=\"tg-spoiler\">—Ö—É–π</span> –¥—ã—à–∏—Ç, –Ω–æ –Ω–µ —à—É—Ç–∏—Ç...</i>",
	"<b>üí© –í <span class=\"tg-spoiler\">–ø–∏–∑–¥—É</span> —Ç–∞–∫–∏—Ö —é–º–æ—Ä–∏—Å—Ç–æ–≤.</b> –®—É—Ç–∏ —É–∂–µ!",
	"<b>üöΩ –¢–µ–±–µ –≤ —Ä–æ—Ç <span class=\"tg-spoiler\">–Ω–∞—Å—Å–∞—Ç—å</span> –∏–ª–∏ —à—É—Ç–∫—É —Å–∫–∞–∂–µ—à—å?</b>",
	"<b>üé≠ –¢—ã <span class=\"tg-spoiler\">–¥–æ–ª–±–æ—ë–±</span> –∏–ª–∏ —é–º–æ—Ä–∏—Å—Ç?</b> –®—É—Ç–∏ –¥–∞–≤–∞–π!",
	"<b>üìâ –ü–æ–∫–∞ –Ω–µ —Å–º–µ—à–Ω–æ...</b> –ò—Å–ø—Ä–∞–≤–ª—è–π—Å—è!",
	"<b>üö™ –°—é–¥–∞ <span class=\"tg-spoiler\">–ø–∏–∑–¥—É</span> –Ω–µ—Å–∏, –∞ –Ω–µ –º–æ–ª—á–∞–Ω–∏–µ.</b>",
	"<b>üé™ –¢—ã, <span class=\"tg-spoiler\">–±–ª—è,</span> —Ü–∏—Ä–∫ –∑–∞–±—ã–ª?</b> –®—É—Ç–∏ –¥–∞–≤–∞–π!",
	"<b>üé≤ –í <span class=\"tg-spoiler\">—Ä–æ—Ç –µ–±–∞—Ç—å—Å—è</span> –∏–ª–∏ —à—É—Ç–∏—Ç—å?</b> –í—ã–±–∏—Ä–∞–π.",
	"<b>üì£ <span class=\"tg-spoiler\">–ë–æ—Å—ã–π —Ö—É–π</span> —É —Å—Ü–µ–Ω—ã...</b> –®—É—Ç–∏, –±—Ä–∞—Ç–∞–Ω!",
	"<b>üñï <span class=\"tg-spoiler\">–ï–±–∞–ª–æ</span> –∑–∞–≤–∞–ª–∏ –∏ —à—É—Ç–∏!</b>",
	"<b>üå™Ô∏è –¢—ã –∫–∞–∫ <span class=\"tg-spoiler\">—Ö—É–π</span> –Ω–∞ –≤–µ—Ç—Ä—É.</b> –®—É—Ç–∏ –∏–ª–∏ —É–π–¥–∏!",
	"<b>üî• –í—Å—è <span class=\"tg-spoiler\">–ø–∏–∑–¥–∞</span> –≤ –æ–≥–Ω–µ, –∞ —Ç—ã –Ω–µ —à—É—Ç–∏—à—å?</b>",
	"<b>üì¢ –¢—ã –≤ <span class=\"tg-spoiler\">—Ö—É–π</span> –Ω–µ –≤—Å—Ä–∞–ª—Å—è –±–µ–∑ —à—É—Ç–∫–∏.</b>",
	"<b>üìù –ü–∏—à–∏, <span class=\"tg-spoiler\">–±–ª—è–¥—å</span>, –∏–ª–∏ –ª–∏–≤–∞–π <span class=\"tg-spoiler\">–Ω–∞—Ö—É–π.</span></b>",
	"<b>üìå –Ø —Ç—É—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫. –î–∞–≤–∞–π —à—É—Ç–∫—É!</b>",
	"<b>üëÄ –°–º–æ—Ç—Ä–∏, <span class=\"tg-spoiler\">–¥–æ–ª–±–æ—ë–±!</span> –®—É—Ç–∫–∞, –∏–ª–∏ –≤ <span class=\"tg-spoiler\">—Ä–æ—Ç –Ω–∞—Å—Å—É.</span></b>",
	"<b>üé≠ –ù–µ –∑–Ω–∞–µ—à—å —à—É—Ç–æ–∫? –¢—ã <span class=\"tg-spoiler\">—É–µ–±–∞–Ω.</span></b>",
	"<b>üõë –¢—ã –ª–∏–±–æ —à—É—Ç–∏—à—å, –ª–∏–±–æ <span class=\"tg-spoiler\">—É—ë–±—ã–≤–∞–π!</span></b>",
	"<b>üîä <span class=\"tg-spoiler\">–ë–ª—è–¥—å</span>, –≥–¥–µ —Ç–≤–æ—è <span class=\"tg-spoiler\">—Å—É–∫–∞ —à—É—Ç–∫–∞?</span></b>",
	"<b>üåä –î–∞–≤–∞–π —à—É—Ç–∫—É, –ø–æ–∫–∞ –Ω–µ <span class=\"tg-spoiler\">–æ–±–æ—Å—Å–∞–ª—Å—è.</span></b>",
	"<b>üî• –í—Å—è <span class=\"tg-spoiler\">–ø–∏–∑–¥–∞</span> –≤ –æ–≥–Ω–µ, –∞ —Ç—ã –Ω–µ —à—É—Ç–∏—à—å?</b>",
	"<b>üìâ –ü–æ–∫–∞ –Ω–µ —Å–º–µ—à–Ω–æ...</b> –ò—Å–ø—Ä–∞–≤–ª—è–π—Å—è!",
	"<b>ü´† –¢—ã —Ç—É—Ç –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫, <span class=\"tg-spoiler\">—Ö—É–µ—Å–æ—Å?</span> –ò–ª–∏ —à—É—Ç–∏—à—å?</b>",
	"<b>üöÄ –ù–µ –º–æ–ª—á–∏, —Ç—ã –Ω–µ <span class=\"tg-spoiler\">–±–∞—Ç—è.</span> –®—É—Ç–∏!</b>",
}
